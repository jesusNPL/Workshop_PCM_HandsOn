---
title: "Introduction to Phylogenies and the Comparative Method"
description: Showing some neat features of R!
date: today # other options: now, last-modified
authors:
  - name: Jes√∫s N. Pinto-Ledezma 
    url: https://jesusnpl.github.io
    affiliation: Ecology, Evolution & Behavior, University of Minnesota
                Introduction to Phylogenetic Comparative Methods
    affiliation-url: https://github.com/jesusNPL/Workshop_PCM_HandsOn.git
title-block-banner: true
#title-block-banner: "#562457"
format: 
  html: 
    embed-resources: true # save contained file.
    theme: spacelab # check other themes https://quarto.org/docs/output-formats/html-themes.html 
    code-fold: true
    toc: true
    number-sections: true
bibliography: PCM.bib
link-citations: true
csl: apa-single-spaced.csl
editor: 
  markdown: 
    wrap: 72
---

::: callout-note
In this hands-one, you will learn basic tools in R for visualizing phylogenies, testing models of character evolution, performing phylogenetic correction of a regression model, and test for the phylogenetic signal of continuous characters. This lab is based in part on one designed by [LukeHarmon](https://scholar.google.com/citations?hl=en&user=nsA3IsgAAAAJ&view_op=list_works) for a workshop that he and others ran at Ilha Bela, Brazil; the original can be seen [here](http://lukejharmon.github.io/ilhabela/instruction/2015/07/03/PGLS/) There are many other useful labs in comparative analysis from that [workshop](http://lukejharmon.github.io/ilhabela/) that you can peruse at your leisure.
:::

You will need two datasets, that will be provided for you:

1.  A data.frame with species traits -- **CDR_traits_DIAZ_imputed.csv**

2.  A phylogenetic tree -- **CDR_timeTree_tacted.nex** 

3. A community dataset -- **CDR_biocon_sample.csv**

# Set up your data and your working directory

For this hands-on, you will need to have a set of R packages to do this lab. Install the following packages:

```{r}
#| eval: false
# Package vector names 
packages <- c("tidyverse", "knitr", "ape", "geiger", 
              "caper", "phytools", "picante") 

```

::: callout-tip
## Function install.packages()

You can use the function **install.packages()** to install the packages.
:::

If you don't want to install the packages one by one, you can use the next command.

```{r}
#| eval: false
# Install packages not yet installed 
# get packages already installed
installed_packages <- packages %in% rownames(installed.packages())

# If the packages are installed skip if not install them
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages], dependencies = TRUE)
}

```

This command, will, first, check if you already the packages installed, then if a package is not installed in your computer, will install it.

Load installed packages:

```{r}
library(tidyverse)
library(knitr)
library(ape)
library(geiger)
library(phytools)
library(caper)
library(picante)
```

Set up a working directory. Tell R that this is the directory you will be using, and read in your data:

::: callout-tip
## Function getwd()

You can use the function **getwd()** to get the current working directory.
:::

```{r}
#| eval: false
setwd("path/for/your/directory")

```

::: callout-tip
## Function dir.create()

You can use the function **dir.create()** to get create a series of folders within your working directory. For example, if you run **dir.create("Output")** it will create an empty folder--named Output--within your working directory. This folder then can be used to store the results from the lab.
:::

Load the data. Instead of reading files from the computer we will pull the required data directly from the internet.

```{r}
#| eval: true

## Trait data
traitData <- read_csv("https://raw.githubusercontent.com/jesusNPL/Workshop_PCM_HandsOn/refs/heads/main/Data/CDR_traits_DIAZ_imputed.csv") %>% 
  mutate(species = tipLabel) %>% 
  column_to_rownames("tipLabel")  # we are using the column "tipLabel" as rownames

## Phylogenetic data
phyData <- force.ultrametric(read.nexus("https://raw.githubusercontent.com/jesusNPL/Workshop_PCM_HandsOn/refs/heads/main/Data/CDR_timeTree_tacted.nex"))

is.ultrametric(phy = phyData)

```

::: callout-tip
## The pipe (%\>%) operator

This operator is, maybe, the most used operator from the {dplyr} package and is used to perform a sequence of operations on a data frame. In other words, the pipe operator simply feeds the results of one operation into the next operation below it.
:::

::: {.callout-caution collapse="true"}
## Double-check your working directory

Previous lines of code will only work if you have set your **working directory (WD)** and only if you have the folder **Data** within the WD. You can check the Intro-R lab for more details.
:::

OK. You should be ready to go.

Let's inspect the data first, to do that we will use the function **"glimpse()"** of the R package **{dplyr}**

```{r}

glimpse(traitData)

```

Let's check if our trait data contain the same species as the phylogeny

```{r}

tmp <- name.check(phy = phyData, data = traitData)

# print the results
tmp

```

It indicates that several species are not present either in the trait data or phylogeny, so let's drop this species from the phylogeny and remove from the trait data. To do that we will use the function **drop.tip()** of the package **{ape}**

```{r}

phyData <- drop.tip(phy = phyData, tip = tmp$tree_not_data)

traitData <- traitData %>% 
  filter(species %in% phyData$tip.label)

```

We can double check if our data match after dropping the missing species

```{r}

name.check(phy = phyData, data = traitData)

```

Another option is to use the function "comparative.data" of the R package {caper}

```{r}
## Create comparative.data object for further analyses
compCDR <- comparative.data(
  phy = phyData,
  data = traitData,
  names.col = "species",
  vcv.dim = TRUE,
  warn.dropped = FALSE
)

```



Anyway, now it seems that we are ready to go!

# Working with trees

Let's start by looking at the phylogeny of these birds and learning a bit about how to work with trees in R.

*What does your tree look like?*

```{r}
#| eval: true

plot(phyData)

```

**Answer:** 
Whoa. That's ugly. Let's clean it up.

```{r}
#| eval: true

plot.phylo(phyData, 
           no.margin = TRUE, 
           cex = 0.5)

```

Better. You can mess around with tree plotting functions in **plot.phylo()** as much as you'd like. Try this for example:

```{r}

plot.phylo(phyData, 
           type = "fan", 
           no.margin = TRUE, 
           cex = 0.3)

```

Much much better.

It may be useful to understand how trees are encoded in R. Typing in just the name of the tree file like this:

```{r}
#| eval: true

phyData

```

will give you basic information about the phylogeny: the number of tips and nodes; what the tips are called; whether the tree is rooted; and if it has branch lengths.

```{r}
#| eval: true

str(phyData)

```

will tell you more about tree structure. Trees consist of tips connected by edges (AKA branches)

```{r}
#| eval: false

phyData$tip.label

```

gives you a list of all your terminal taxa, which are by default numbered 1-n, where n is the number of taxa.

```{r}
#| eval: false

phyData$Nnode

```

gives you the number of nodes. This is a fully bifurcating rooted tree, so it has 1 fewer node than the number of taxa.

```{r}
#| eval: false

phyData$edge

```

This tells you the beginning and ending node for all edges.

Put that all together with the following lines

```{r}
#| eval: true

plot.phylo(phyData, 
           type = "fan", 
           no.margin = TRUE, 
           cex = 0.7, 
           label.offset = 0.1, 
           show.tip.label = FALSE)

nodelabels(cex = 0.5)

tiplabels(cex = 0.5)

```

There are many ways to manipulate trees in R using **{ape}**, **{Phytools}**, and other packages. This just gives you a bare-bones introduction.

# Working with a data matrix and testing hypotheses in a phylogenetically informed way

Let's ask some questions using the trait data that were measured for these birds. First, explore the data in the "traitData" matrix. Here are some options for visualizing data matrices:

```{r}
#| eval: false

traitData %>% 
  head() # this will show you the first few rows of your data matrix and its header

traitData %>% 
  dimnames() # this will show you the row and column headers for your matrix

traitData %>% 
  View() # this will let you visualize the entire matrix

```

**leaf area** is one of your variables found in the trait dataset. Let's isolate it so we can work with it easily:

```{r}

leaf_area <- traitData[, "leaf_area"] 
names(leaf_area) <- rownames(traitData) 
# data vectors have to be labelled with tip names for the associated tree. 
# This is how to do that. 

```

::: callout-tip
## Exploring the data

It is good practice to check the distribution of your data before doing downstream analysis.
:::

```{r}

hist(leaf_area)

```

What about if we log scale the HWI?

```{r}

hist(log(leaf_area))

```

*Does it look different/similar?*

In the lecture, we talked about one model of character evolution, called a **Brownian Motion** model. This model assumes that a trait evolves from a starting state (**z0**) according to a random walk with the variance specified by the rate parameter $\sigma^{2}$ (**sigma-squared**). In short, Brownian motion describes a process in which tip states are modeled under the assumption of a multivariate normal distribution. On a phylogeny, the multivariate mean of tip states is equal to the root state estimate, and variance accumulates linearly through time.

*What does Brownian Motion evolution of leaf area look like?*

```{r}
#| eval: true

brownianModel <- fitContinuous(phy = phyData, 
                               dat = log(leaf_area))

brownianModel # this will show you the fit statistics and parameter values

```

**Answer:** 
The estimated ancestral state (z0) under Brownian Motion evolutionary model suggests that leaf area was ~6.127122. This value is similar to the current mean trait log-value ($\mu$ = 6.87). This model also suggests that leaf area is evolving at a rate $\sigma^{2}$ = 35.45.

```{r}

mean(log(leaf_area))

```

Here, you can see the estimates for ancestral state (z0), and the rate parameter ($\sigma^{2}$), as well as some measures of model fit. The fit of the model is determined using maximum likelihood, and expressed as a log likelihood **(lnL)**. The higher the **lnL**, the more probable the data given the model. However, when comparing different models, we can't use the **lnL**, because it does not account for the difference in the number of parameters among models. Models with more parameters will always fit better, but do they fit significantly better? For example an OU model has 4 parameters (alpha \[$\alpha$\], theta \[$\theta$\], z0, and sigma-squared \[$\sigma^{2}$\]), so it should fit better than a BM model, which includes only z0 and $\sigma^{2}$. To account for this, statisticians have developed another measure of fit called the AIC (Akaike Information Criterion): **AIC = (2xN)-2xlnL**, where **N** is the number of parameters. This penalizes the likelihood score for adding parameters. When selecting among a set of models, the one with the lowest AIC is preferred. We will use this information later on in this lab.

In addition to assessing model fit, we can use the Brownian Motion model to reconstruct ancestral states of a character on a tree. To visualize what BM evolution of this trait looks like on a tree. The *contMap()* command in {phytools} estimates the ancestral states and plots them on a tree.

```{r}
#| eval: true

## Calculate number of trait shifts
obj <- contMap(phyData, 
        log(leaf_area), 
        fsize = 0.1, 
        lwd = 2, 
        type = "fan", 
        plot = FALSE)

# change colors
obj <- setMap(obj, 
              c("white", "#FFFFB2", "#FECC5C", "#FD8D3C", "#E31A1C")) 

# Plot the results
plot(obj, 
     fsize = c(0.2, 0.8), 
     leg.txt = "Leaf area")

```

*Describe the evolution of Hand-wing index on this tree. How many times have extremely high and extremely low Hand-wing index evolved on this tree?*

**Answer:** 
This phylogenetic tree contains 249 species, and the mapped values range between 1.96 and 3.57. By visual inspection, overall, the HWI tended to evolve more low values than high values; indeed, HWI seems to evolve high values in about 5-7 branches. The species with higher HWI index are *Berlepschia rikeri*, *Geositta antarctica*, *Geositta isabellina*, *Geositta saxicolina*, and *Geositta maritima*.

```{r}

plot(obj, 
      fsize = c(0.6, 0.8), 
      type = "fan", 
      leg.txt = "Hand-Wing Index")

```

*What does this say about our ability to test hypotheses about the evolution of leaf area?*

**Answer:** 
Although the Brownian Motion model is simple, it helps us understand how fast or slow a specific attribute is evolving and to identify branches with different evolutionary regimes.

Let's go ahead and test some hypotheses. **Plant height** is another trait in your data matrix. Let's assess whether there is a correlation between leaf area and plant size? 

```{r}
#| eval: true

plant_height <- traitData[, "plant_height"]

names(plant_height) <- rownames(traitData)

```

Let's see if range size follow a normal distribution

```{r}
#| eval: true

hist(log(plant_height))

```

Let's look at a plot of range size as a function of Hand-wing index.

```{r}
#| eval: true

traitData %>% 
  ggplot(aes(x = log(plant_height), y = log(leaf_area))) + 
  geom_point(alpha = 0.5, color = "darkgray", size = 3) +  
  labs(x = "log(Plant height)", y = "log(Leaf area)")

```

Hm. looks promising. 

*How would you describe the relationship between these two variables?*

**Answer:** 
At first glance, it seems that there is a positive association between leaf area and plant height.

Let's be more quantitative in describing that relationship with a linear model.

```{r}
#| eval: true

lmModel <- lm(log(leaf_area) ~ log(plant_height)) 

summary(lmModel)

```

```{r}

traitData %>% 
  ggplot(aes(x = log(plant_height), y = log(leaf_area))) + 
  geom_point(alpha = 0.5, color = "darkgray", size = 3) +  
  labs(x = "log(Plant height)", y = "log(Leaf area)") + 
  geom_smooth(method = "lm")

```

The coefficients table from the *summary()* command shows the slope and intercept for the linear model describing **leaf area** as a function of **plant height**. Each line shows the estimated coefficient (Estimate), the standard error (Std. Error) of that estimate, as well as a t-statistic and associated p-value, testing whether those parameters are equal to 0. The Multiple R-squared is an estimate of how much variance in the response variable can be explained by the predictor variable.

*Write the linear model for this relationship. Are the parameters significantly different from 0?*

**Answer:** 
LA(y) \~ $\alpha$ = 6.89287 + $\beta$ = 0.38352(log(plant height)) + $\epsilon$

The coefficients ($\alpha$ = Intercept and $\beta$ = Slope) of this model are different from zero, that is, the model suggest that there is a positive association between the two variables (Leaf area \~ plant height).

*What is the R\^2 value for this data?*

**Answer:** 
Despite the coefficients of the model being different from zero, the adjusted R\^2 = 0.16 meaning that plant height explains 16% of the variation of leaf area.

*How do you feel about that?*

## Phylogenetic regression (PGLS)

Nice. But, we have not considered the fact that these plants in Cedar Creek are related to each other. As such, they may share similar trait values simply due to the fact that their ancestors had large leaf area and heigth or the reverse. In other words, we need to account for non-independence of residuals due to phylogeny. One way to do that is to use phylogenetic-generalized-least-squares regression (PGLS).

```{r}
#| eval: true

pglsModel <- pgls(log(leaf_area) ~ log(plant_height), lambda = "ML", data = compCDR)

summary(pglsModel)

```

```{r}
#| eval: true

summary(pglsModel)

coef(pglsModel)

```

```{r}
#| eval: true

traitData %>% 
  ggplot(aes(x = log(plant_height), y = log(leaf_area))) + 
  geom_point(alpha = 0.5, color = "darkgray", size = 3) +  
  labs(x = "log(Plant height)", y = "log(Leaf area)") + 
  geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2], 
              color = "red", linewidth = 1.5)

# will plot the pgls regression line on your biplot.
```


```{r}
#| eval: true

## Loglik of the PGLS model
logLik(pglsModel)

## Estimate null model or intercept-only model
y <- as.numeric(fitted(pglsModel) + resid(pglsModel))

nullModel <- lm(y ~ 1)

## loglik null model
logLik(nullModel)

## Is higher than a simple null model
logLik(pglsModel) > logLik(nullModel)

## Is higher than the lm model
logLik(pglsModel) > logLik(lmModel)

```

Let's use Information Criteria and see which model performed the best.

```{r}
#| eval: true

AIC(lmModel)

AIC(nullModel)

AIC(pglsModel)


```

Or we can make our model comparisons more interpretable.

```{r}

mods <- c(AIC(lmModel), AIC(nullModel), AIC(pglsModel))
names(mods) <- c("OLS", "Null", "PGLS")

aics <- aicw(mods) 
names(aics)[1] <- "AIC"

aics$lnL <- c(logLik(lmModel), logLik(nullModel), logLik(pglsModel))

kable(aics)

```

Seems that PGLS is outperforming the OLS, let's plot the results:

```{r}
#| eval: true

traitData %>% 
  ggplot(aes(x = log(plant_height), y = log(leaf_area))) + 
  geom_point(alpha = 0.5, color = "darkgray", size = 3) +  
  labs(x = "log(Plant height)", y = "log(Leaf area)") + 
    geom_smooth(method = "lm", se = TRUE, linewidth = 1.5) + # OLS slope
  geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2], # PGLS slope
              color = "red", linewidth = 1.5) 

# will plot the pgls regression line on your biplot.
```

*How do you feel about that?*

# Phylogenetic signal

Phylogenetic signal is the tendency of related species to resemble each other more than species drawn at random from the same tree.

## Blomberg's K

Blomberg's K compares the variance of **PICs** to what we would expect under a Brownian motion (BM) model of evolution. **K = 1** means that close relatives resemble each other as much as we should expect under BM. **K \< 1** that there is less **phylogenetic signal** than expected under BM and **K \> 1** means that there is more. In addition, a significant p-value returned from a randomization test tells us that the phylogenetic signal is significant, in other words, close relatives are more similar than random pairs of taxa in the dataset.

```{r}
#| eval: true

# Run Blomberg's K
K_PH <- phylosig(tree = phyData, # Phylogeny
                  x = log(plant_height), # trait
                  method = "K", # method
                  test = TRUE)

# Print results
print(K_PH)

# Plot results
plot(K_PH)

```

## Pagel's Lambda

Pagel's $\lambda$ is a tree transformation that stretches the tip branches relative to internal branches, making the tree more and more like a complete polytomy of a star phylogeny. If $\lambda = 0$ there is no phylogenetic signal, while $\lambda = 1$ correspond to BM and $0 < \lambda < 1$ in between.

```{r}
#| eval: true

# Run Pagel's Lambda
LB_PH <- phylosig(tree = phyData, 
                  x = log(plant_height), 
                  method = "lambda", 
                  test = TRUE)

# Print the results
print(LB_PH)

# Plot thre results
plot(LB_PH)

```

*Describe the results of phylogenetic signal. Does plant height presents phylogenetic signal?*

# Model Fitting

**Brownian Motion** is only one model of evolution for a continuous variable. This model assumes that a trait evolves from a starting state (**z0**) according to a random walk with the variance specified by the rate parameter $\sigma^{2}$ (**sigma-squared**). In short, Brownian motion describes a process in which tip states are modeled under the assumption of a multivariate normal distribution. On a phylogeny, the multivariate mean of tip states is equal to the root state estimate, and variance accumulates linearly through time.

Another model is the **Ornstein-Uhlenbeck (OU)** model, which allows the trait mean to evolve towards a new state (theta), with a selective force (alpha). These two new parameters, plus the starting state (z0) and the rate of evolution (sigsq) parameters from the BM model, make for a 4-parameter model. 

The **Early Burst (EB)** model allows the rate of evolution to change across the tree, where the early rate of evolution is high and declines over time (presumably as niches are filled during an adaptive radiation. The rate of evolution changes exponentially over time and is specified under the model r\[t\] = r\[0\] x exp(a x t), where r\[0\] is the initial rate, a is the rate change parameter, and t is time. The maximum bound is set to -0.000001, representing a decelerating rate of evolution. The minimum bound is set to $log(10^{-5})$/depth of the tree.

Let's evaluate the relative fit of these three models to the Hand-wing index trait.

## Brownian Motion (BM)

```{r}
#| eval: true

BMModel <- fitContinuous(phy = phyData, # phylogeny 
                         dat = log(leaf_area), # trait 
                         model = "BM") # evolutionary model

BMModel

```

## Ornstein-Uhlenbeck (OU)

```{r}
#| eval: true

OUModel <- fitContinuous(phy = phyData, # phylogeny 
                         dat = log(leaf_area), # trait 
                         model = "OU", # evolutionary model
                         control = list(method = c("subplex")))

OUModel

```

## Early Burst (EB)

```{r}
#| eval: true

EBModel <- fitContinuous(phy = phyData, # phylogeny
                         dat = log(leaf_area), # trait 
                         model = "EB")

EBModel

```

And recover the parameter values and fit estimates.

```{r}
#| eval: false

BMModel

OUModel

EBModel

```

Compare all models and select the best fitting model. To to that, we will use AIC model comporison approach based on weights.

```{r}
#| eval: true

# Vector of models
EvoMods <- c(BMModel$opt$aicc, OUModel$opt$aicc, EBModel$opt$aicc)
# rename the models
names(EvoMods) <- c("BM", "OU", "EB")

# Run AIC weights 
EvoModsComparison <- aicw(EvoMods)

names(EvoModsComparison)[1] <- "AIC"

EvoModsComparison$lnL <- c(brownianModel$opt$lnL, OUModel$opt$lnL, EBModel$opt$lnL)

kable(EvoModsComparison)

```

*Make a table with the AIC and lnL values for each model. Which model provides the best fit for leaf area?*

**Answer:**
According to the model comparison using AIC, the model that best fits the data is the OU model. 

*Now, add the results for a model fitting analysis of plant size to this table.*

```{r}
#| eval: true

BM_PH <- fitContinuous(phy = phyData, # phylogeny
                         dat = log(plant_height), # trait 
                         model = "BM")

OU_PH <- fitContinuous(phy = phyData, # phylogeny
                         dat = log(plant_height), # trait 
                         model = "OU")

EB_PH <- fitContinuous(phy = phyData, # phylogeny
                         dat = log(plant_height), # trait 
                         model = "EB")

# Vector of models
mods_PH <- c(BM_PH$opt$aicc, OU_PH$opt$aicc, EB_PH$opt$aicc)
# rename the models
names(mods_PH) <- c("BM", "OU", "EB")

# Run AIC weights 
aic_PH <- aicw(mods_PH) 
names(aic_PH)[1] <- "AIC"

aic_PH$lnL <- c(BM_PH$opt$lnL, OU_PH$opt$lnL, EB_PH$opt$lnL)

kable(aic_PH)

```

One last thing that I would like to present is the estimation of the metric **phylogenetic half-life** that can be interpreted as the time it takes for half of the information in the phylogeny to be erased.

```{r}
#| eval: true

# half-life leaf area
log(2) / OUModel$opt$alpha 

```


# Measuring phylogenetic diversity within communities 

:::{.callout-note}
The main goal of this section is to present basic understanding about measuring phylogenetic diversity within communities or best known as the analysis of community phylogenetics. The community phylogenetics integrates ecological and evolutionary concepts and explores the mechanisms (e.g., biotic interactions or environmental filters) governing the assembly of ecological communities. 

There are different sources of information and web pages with a lot of information about this field. The most common and useful are the web pages of the books: [Modern Phylogenetic Comparative Methods and Their Application in Evolutionary Biology](http://www.mpcm-evolution.org/) and [Phylogenies in Ecology](https://www.utsc.utoronto.ca/~mcadotte/page-3/). Among the most influential papers in this field are [Phylogenies and Community Ecology](https://www.annualreviews.org/doi/abs/10.1146/annurev.ecolsys.33.010802.150448) by @webb_phylogenies_2002 and [The merging of community ecology and phylogenetic biology](https://onlinelibrary.wiley.com/doi/10.1111/j.1461-0248.2009.01314.x) by @cavender-bares_merging_2009.
:::

Load the phylogenetic tree and community data. 
```{r}
#| eval: false

## Phylogenetic data
phyData <- force.ultrametric(read.nexus("https://raw.githubusercontent.com/jesusNPL/Workshop_PCM_HandsOn/refs/heads/main/Data/CDR_timeTree_tacted.nex"))

cdmData <- read_csv("~/Dropbox/Collaborations/CDR/1_Manuscripts/BioChange/data/Reich_2024/BioCON_sploss_NxCO2_1998_2021_cover_biomass_newNames.csv") %>% 
  filter(LTERYear %in% c(1998, 2008, 2018)) %>% 
  filter(sprich == 16) %>% 
  replace(is.na(.), 0)

cdmData %>% 
  select(matches(x)) %>% 
  select(!cntrt )

write_csv(cdmData, file = "Data/CDR_timeTree_tacted.nex")

```


Awesome, we are now ready to explore the **jungle** of metrics for the evaluation of taxonomic, phenotypic and phylogenetic structure of communities [@pausas_jungle_2010]. Let's start with metrics for the taxonomic dimension.

## Explore diversity metrics

Let's calculate some metrics manually and then using the package {**picante**} we will calculate the same metrics but for all communities at once.

### Phylogenetic diversity

Phylogenetic diversity is just the sum of the total branch lengths in the community. In this case we are calculating PD using all species in the phylogeny, in other words, assuming that a single community contain the same number of species as the phylogeny.

```{r}
#| eval: false

sum(matched$phy$edge.length) #  sum of the total branch lengths in the community

```

We can calculate PD for individual plots or communities, for example the plot **HARV_001**

```{r}
#| eval: false

# Select species that are only present in the plot HARV_001
HARV_001 <- matched$comm %>% 
  filter(rownames(.) == "HARV_001") %>% 
  t() %>% 
  data.frame() %>% 
  filter(HARV_001 > 0)

# Drop species in the phylogeny that are not present in the plot HARV_001
HARV_001_phy <- drop.tip(matched$phy, 
                         setdiff(matched$phy$tip.label, 
                                 rownames(HARV_001)))

sum(HARV_001_phy$edge.length)

```

We can confirm the result by calculating PD using the package {**picante**}. However, instead of calculating plot by plot {picante} will calculate PD for all of the plots.

```{r}
#| eval: false

HARV_PD <- pd(samp = matched$comm, 
              tree = matched$phy, 
              include.root = FALSE) # Faith's PD

head(HARV_PD)

```

We NOW can confirm the PD value estimated by hand is equal to the PD estimated using {picante}.

:::{.callout-tip}
## Argument include.root = TRUE

Using the argument "include.root = TRUE" in the function pd() of {picante} will return a slightly different PD value as the root of the phylogeny is considered in the calculation.

:::

You can see both metrics SR and PD are highly correlated, that is because PD is highly sensitive to the sample size, i.e., as more species are added to the community more branch lengths are added to the phylogeny and consequently the expected relationship is high.

```{r}
#| eval: false

HARV_PD %>% 
  ggplot(aes(x = SR, y = PD)) + 
  geom_point(size = 3, color = "darkgray") 

```

Now see correlation between the two metrics

```{r}
#| eval: false

HARV_PD %$% 
  cor.test(SR, PD, use = "complete.obs")

```
Let's plot the association again...

```{r}
#| eval: false

# Aux function for visualization
theme_biosci <- function() {
  theme_bw() + #base_family = "Noto Sans") +
    theme(panel.grid.minor = element_blank(),
          plot.background = element_rect(fill = "white", color = NA),
          strip.background = element_rect(fill = "grey80", color = NA),
          legend.title = element_text(face = "bold", size = 15), 
          legend.text = element_text(size = 12))
}

# plot
HARV_PD %>% 
  ggplot(aes(x = SR, y = PD)) + 
  geom_point(size = 3, color = "darkgray") + 
  labs(x = "Species richness", y = "PD (millions of years)") + 
  theme_biosci()

```

### Mean pairwise distance (MPD) and mean nearest-pairwise distance (MNTD)

Other common metrics are MPD (mean pairwise distance) and MNTD (mean nearest taxon distance). As in PD, let's calculate MPD and MNTD manually.

```{r}
#| eval: false

# MPD
dist.trMB <- cophenetic(HARV_001_phy)

dist.trMB <- dist.trMB[lower.tri(dist.trMB, diag = FALSE)]

mean(dist.trMB)

```

```{r}
#| eval: false

# MNTD
dist.trMB2 <- cophenetic(HARV_001_phy)
diag(dist.trMB2) <- NA
apply(dist.trMB2, 2, min, na.rm = TRUE)

mean(apply(dist.trMB2, 2, min, na.rm = TRUE))

```

And now using the package **{picante}**

```{r}
#| eval: false

# MPD
HARV_MPD <- mpd(matched$comm, 
                cophenetic(matched$phy)) 

head(HARV_MPD)

```

```{r}
#| eval: false

# MNTD
HARV_MNTD <- mntd(matched$comm, 
                  cophenetic(matched$phy)) 

head(HARV_MNTD)

```

Until here we just played with the data and also confirmed that we can calculate different metrics by hand. Now let's do a more formal evaluation of the biodiversity in Harvard Forest & Quabbin Watershed NEON, MA.

# Community phylogenetic diversity metrics

The analyses of community phylogenetic started making inferences about the mechanisms structuring the local communities through the evaluation of phylogenetic arrangements in local communities (see @cavender-bares_merging_2009 for an initial criticism). However, new methods are now available, such that more complex balance between ecological and historical processes at local and regional scales can be incorporated into the analyses [@pigot_new_2015; @pinto-ledezma_drivers_2019; @pintoledezma_testing_2020].

Let's calculate some of the most common metrics.

Note - we will use the object __HARV_CDM__ to store all the results.

### Phylogenetic diversity in a community - PD

PD or phylogenetic diversity is the sum of the total phylogenetic branch length for one or multiple samples.

```{r}
#| eval: false

HARV_CDM <- ses.pd(samp = matched$comm, 
                   tree = matched$phy, 
                   runs = 999) # this will take some time

HARV_CDM <- HARV_CDM %>% 
  select(ntaxa, pd.obs, pd.obs.z)

#HARV_CDM <- HARV_CDM[, c(1, 2, 6, 7)]

head(HARV_CDM)

```

### Phylogenetic Rao's quadratic entropy - RaoD

Rao's quadratic entropy (Rao 1982) is a measure of diversity in ecological communities that can optionally take species differences (e.g. phylogenetic dissimilarity) into account.

```{r}
#| eval: false

HARV_CDM <- HARV_CDM %>% 
  mutate(RaoD = raoD(matched$comm, 
                     force.ultrametric(matched$phy))$Dkk)

head(HARV_CDM)

```

### Mean pairwise distance separating taxa in a community - MPD 

```{r}
#| eval: false

# SES-MPD
HARVsesmpd <- ses.mpd(samp = matched$comm, 
                      dis = cophenetic(matched$phy), 
                      null.model = "taxa.labels", 
                      abundance.weighted = TRUE, 
                      runs = 999)

HARVsesmpd <- HARVsesmpd %>% 
  select(mpd.obs, mpd.obs.z)

HARV_CDM <- bind_cols(HARV_CDM, HARVsesmpd)

```

### Mean nearest taxon distance for taxa in a community - MNTD
 
```{r}
#| eval: false

# SES-MNTD
HARVsesmntd <- ses.mntd(samp = matched$comm, 
                        dis = cophenetic(matched$phy), 
                        null.model = "taxa.labels", 
                        abundance.weighted = TRUE,
                        runs = 999)

HARVsesmntd <- HARVsesmntd %>% 
  select(mntd.obs, mntd.obs.z)

HARV_CDM <- bind_cols(HARV_CDM, HARVsesmntd)

```

### Phylogenetic species variability - PSV

Phylogenetic species variability quantifies how phylogenetic relatedness decreases the variance of a hypothetical unselected/neutral trait shared by all species in a community. 

```{r}
#| eval: false

# PSV or phylogenetic species variability
HARV_CDM <- HARV_CDM %>% 
  mutate(PSV = psv(samp = matched$comm, 
               tree = matched$phy, 
               compute.var = TRUE)$PSVs)

HARV_CDM

```

### Phylogenetic species richness - PSR

Phylogenetic species richness is the number of species in a sample multiplied by PSV.

```{r}
#| eval: false

# PSR or phylogenetic species richness
HARV_CDM <- HARV_CDM %>% 
  mutate(PSR = psr(samp = matched$comm, 
               tree = matched$phy, 
               compute.var = TRUE)$PSR)

HARV_CDM

```

### Phylogenetic species evenness - PSE

Phylogenetic species evenness is the metric PSV modified to incorporate relative species abundances.

```{r}
#| eval: false

# PSE or phylogenetic species evenness
HARV_CDM <- HARV_CDM %>% 
  mutate(PSE = pse(samp = matched$comm, 
               tree = matched$phy)$PSEs)

HARV_CDM

```

### qDp

**qD(p)** is a metric that measure the variation in species‚Äô divergences within communities. This metric is a modification of the Hill index, weighting a species‚Äô proportional abundance by its relative share of phylogenetic information.

```{r}
#| eval: false

# Scheiner 2012 qD(p)
source("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2021/R-Functions/qDp.R")

HARV_CDM <- HARV_CDM %>% 
  mutate(qDP = qDp(matched$phy, 
                   matched$comm, q = 2))

HARV_CDM

```

We have calculated several metrics that describe the phylogenetic structure of communities at Harvard Forest & Quabbin Watershed NEON (HARV) site.

# Compare the metrics

```{r}
#| eval: false

scatterplotMatrix(HARV_CDM)

```
Hmmm, Kinda ugly...

Let's use the package {corrplot} to get a more informative figure.

```{r}
#| eval: false

cor_mat <- cor(HARV_CDM, method = 'spearman')

corrplot.mixed(cor_mat, 
               tl.pos = "lt", 
               tl.cex = 0.7, 
               number.cex = 0.7, 
               addCoefasPercent = TRUE, 
               mar = c(0, 0, 1, 0))

```

Explore the correlation among metrics.

```{r}
#| eval: false

HARV_CDM %>% 
  cor.table()

```

You can also plot the relationship between metrics.

```{r}
#| eval: false

HARV_CDM %>% 
  ggplot(aes(x = RaoD, y = PSE)) + 
  geom_point(size = 3, color = "darkgray") + 
  labs(x = "RaoD", y = "PSE") + 
  theme_biosci()

```

*RaoD and PSE are highly correlated; explain why*

```{r}
#| eval: false

HARV_mds <- HARV_CDM %>% 
  select(-c(pd.obs.z, mpd.obs.z, mntd.obs.z)) %>% # MNDS does not like negative values
  na.omit() %>% 
  metaMDS(.)


ordiplot(HARV_mds, type = "t", display = "species")

```

Let's use {ggplot2} to make a better figure.

```{r}
#| eval: false

## Metrics scores
HARV_mds_scores <- data.frame(HARV_mds$species) %>% 
  mutate(Metric = rownames(.))

HARV_mds_scores %>% 
  ggplot(aes(x = MDS1, y = MDS2, color = Metric)) + 
  geom_point(size = 3, alpha = 0.5) + 
  theme_biosci()

```

*What do you think?* 

*Which metric would you use for your paper?*

# The challenge

The challenge for this assignment is:

* **Option 1** 

Repeat all process but select two NEON sites across the United States, compare the results of both sites and discuss the difference in the results if there any. For example, you can use the other two sites we have downloaded at the beginning of the lab, i.e., "CPER" and "ABBY".

* **Option 2** 

Another option is to calculate the phylogenetic diversity metrics for each year on a NEON site. For example, you can use the data from HARV but instead of doing the analysis only for the 2018 (as we did here) you can repeat the process for all years from 2013 to 2022 and discuss if the taxonomic (species richness) and phylogenetic diversities changed.

The end! for now...